{"version":3,"sources":["components/PanoramasVR/index.js"],"names":["EVENTS","FADE_IN","FADE_OUT","LOADED","Thumbnail","styled","img","attrs","props","src","_templateObject","PanoromasVR","state","isLoaded","setIsLoaded","id","_this","imgSet","has","setState","fadeIn","fadeOut","handleLoaded","add","sky","current","emit","Set","React","createRef","this","addEventListener","removeEventListener","_this$props","thumbnail","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","opacity","ref","begin","dur","easing","attribute","to","PureComponent","propTypes","string"],"mappings":"sWAKA,IAAMA,EAAS,CACbC,QAAS,SACTC,SAAU,UACVC,OAAQ,yBAKJC,EAAYC,IAAOC,IAAIC,MAAM,SAAAC,GAAK,MAAK,CAC3CC,IAAKD,EAAMC,MADKJ,CAAHK,KAQTC,qLACJC,MAAQ,CACNC,UAAU,KAuBZC,YAAc,WAAM,IACVC,EAAOC,EAAKR,MAAZO,GACFF,EAAWG,EAAKC,OAAOC,IAAIH,GAEjCC,EAAKG,SAAS,CAAEN,aAEZA,EACFG,EAAKI,SAELJ,EAAKK,aAITC,aAAe,WAAM,IACXP,EAAOC,EAAKR,MAAZO,GAEJC,EAAKC,OAAOC,IAAIH,KAIpBC,EAAKC,OAAOM,IAAIR,GAChBC,EAAKF,kBAGPM,OAAS,WACHJ,EAAKQ,IAAIC,SACXT,EAAKQ,IAAIC,QAAQC,KAAK1B,EAAOC,YAIjCoB,QAAU,WACJL,EAAKQ,IAAIC,SACXT,EAAKQ,IAAIC,QAAQC,KAAK1B,EAAOE,aAIjCe,OAAS,IAAIU,MACbH,IAAMI,IAAMC,+EAxDNC,KAAKN,IAAIC,SACXK,KAAKN,IAAIC,QAAQM,iBAAiB/B,EAAOG,OAAQ2B,KAAKR,2DAIrC,IACXP,EAAOe,KAAKtB,MAAZO,GAEHe,KAAKb,OAAOC,IAAIH,IACnBe,KAAKhB,6DAKHgB,KAAKN,IAAIC,SACXK,KAAKN,IAAIC,QAAQO,oBAAoBhC,EAAOG,OAAQ2B,KAAKR,+CA2CpD,IAAAW,EACoBH,KAAKtB,MAAxBC,EADDwB,EACCxB,IAAKyB,EADND,EACMC,UACLrB,EAAaiB,KAAKlB,MAAlBC,SAER,OACEsB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACjC,EAAD,CAAWK,IAAKyB,EAAWrB,SAAUA,IACrCsB,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,SAAO5B,IAAKA,EAAK8B,QAAQ,IAAIC,IAAKV,KAAKN,KACrCW,EAAAC,EAAAC,cAAA,eACEI,MAAOzC,EAAOC,QACdyC,IArFG,IAsFHC,OAAO,UACPC,UAAU,mBACVC,GAAG,MAELV,EAAAC,EAAAC,cAAA,eACEI,MAAOzC,EAAOE,SACdwC,IA5FG,IA6FHC,OAAO,WACPC,UAAU,mBACVC,GAAG,gBArFSjB,IAAMkB,eA8FhCnC,EAAYoC,UAAY,CACtBhC,GAAIiC,SACJvC,IAAKuC,SACLd,UAAWc,UAGErC","file":"static/js/PanoramasVR.5990905c.chunk.js","sourcesContent":["import React from 'react';\nimport { string } from 'prop-types';\nimport styled from 'styled-components';\nimport 'aframe';\n\nconst EVENTS = {\n  FADE_IN: 'fadein',\n  FADE_OUT: 'fadeout',\n  LOADED: 'materialtextureloaded',\n};\n\nconst DURATION = 1000; // ms\n\nconst Thumbnail = styled.img.attrs(props => ({\n  src: props.src,\n}))`\n  width: 100%;\n  height: 100%;\n  filter: blur(10px);\n`;\n\nclass PanoromasVR extends React.PureComponent {\n  state = {\n    isLoaded: false,\n  };\n\n  componentDidMount() {\n    if (this.sky.current) {\n      this.sky.current.addEventListener(EVENTS.LOADED, this.handleLoaded);\n    }\n  }\n\n  componentDidUpdate() {\n    const { id } = this.props;\n\n    if (!this.imgSet.has(id)) {\n      this.setIsLoaded();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.sky.current) {\n      this.sky.current.removeEventListener(EVENTS.LOADED, this.handleLoaded);\n    }\n  }\n\n  setIsLoaded = () => {\n    const { id } = this.props;\n    const isLoaded = this.imgSet.has(id);\n\n    this.setState({ isLoaded });\n\n    if (isLoaded) {\n      this.fadeIn();\n    } else {\n      this.fadeOut();\n    }\n  };\n\n  handleLoaded = () => {\n    const { id } = this.props;\n\n    if (this.imgSet.has(id)) {\n      return;\n    }\n\n    this.imgSet.add(id);\n    this.setIsLoaded();\n  }\n\n  fadeIn = () => {\n    if (this.sky.current) {\n      this.sky.current.emit(EVENTS.FADE_IN);\n    }\n  }\n\n  fadeOut = () => {\n    if (this.sky.current) {\n      this.sky.current.emit(EVENTS.FADE_OUT);\n    }\n  }\n\n  imgSet = new Set();\n  sky = React.createRef();\n\n  render() {\n    const { src, thumbnail } = this.props;\n    const { isLoaded } = this.state;\n\n    return (\n      <React.Fragment>\n        <Thumbnail src={thumbnail} isLoaded={isLoaded} />\n        <a-scene>\n          <a-sky src={src} opacity=\"0\" ref={this.sky}>\n            <a-animation\n              begin={EVENTS.FADE_IN}\n              dur={DURATION}\n              easing=\"ease-in\"\n              attribute=\"material.opacity\"\n              to=\"1\"\n            />\n            <a-animation\n              begin={EVENTS.FADE_OUT}\n              dur={DURATION}\n              easing=\"ease-out\"\n              attribute=\"material.opacity\"\n              to=\"0\"\n            />\n          </a-sky>\n        </a-scene>\n      </React.Fragment>\n    );\n  }\n}\n\nPanoromasVR.propTypes = {\n  id: string,\n  src: string,\n  thumbnail: string,\n};\n\nexport default PanoromasVR;\n"],"sourceRoot":""}