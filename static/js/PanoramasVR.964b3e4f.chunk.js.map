{"version":3,"sources":["components/PanoramasVR/Thumbnail.js","components/PanoramasVR/index.js","utils/getDisplayName.js","utils/compose.js","utils/withFadeIn.js"],"names":["Thumbnail","styled","img","attrs","props","src","_templateObject","compose","withFadeIn","Loading","EVENTS","FADE_IN","FADE_OUT","LOADED","PanoromasVR","state","isLoaded","setIsLoaded","id","_this","imgSet","has","setState","fadeIn","fadeOut","handleLoaded","add","sky","current","emit","Set","React","createRef","this","addEventListener","removeEventListener","_this$props","thumbnail","react_default","a","createElement","Fragment","PanoramasVR_Thumbnail","opacity","ref","begin","dur","easing","attribute","to","PureComponent","propTypes","string","getDisplayName","WrappedComponent","displayName","name","_len","arguments","length","enhancers","Array","_key","args","reduce","b","apply","Placeholder","Component","WithFadeIn","_React$Component","_getPrototypeOf2","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","concat","loadImage","Image","complete","onload","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default","key","value","prevProps","react__WEBPACK_IMPORTED_MODULE_5___default"],"mappings":"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","file":"static/js/PanoramasVR.964b3e4f.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nimport compose from '@/utils/compose';\nimport withFadeIn from '@/utils/withFadeIn';\nimport Loading from '@/components/Loading';\n\nconst Thumbnail = styled.img.attrs(props => ({\n  src: props.src,\n}))`\n  width: 100%;\n  height: 100%;\n  filter: blur(10px);\n`;\n\nexport default compose(\n  withFadeIn(Loading)\n)(Thumbnail);\n","import React from 'react';\nimport { string } from 'prop-types';\nimport 'aframe';\n\nimport Thumbnail from './Thumbnail';\n\nconst EVENTS = {\n  FADE_IN: 'fadein',\n  FADE_OUT: 'fadeout',\n  LOADED: 'materialtextureloaded',\n};\n\nconst DURATION = 1000; // ms\n\nclass PanoromasVR extends React.PureComponent {\n  state = {\n    isLoaded: false,\n  };\n\n  componentDidMount() {\n    if (this.sky.current) {\n      this.sky.current.addEventListener(EVENTS.LOADED, this.handleLoaded);\n    }\n  }\n\n  componentDidUpdate() {\n    const { id } = this.props;\n\n    if (!this.imgSet.has(id)) {\n      this.setIsLoaded();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.sky.current) {\n      this.sky.current.removeEventListener(EVENTS.LOADED, this.handleLoaded);\n    }\n  }\n\n  setIsLoaded = () => {\n    const { id } = this.props;\n    const isLoaded = this.imgSet.has(id);\n\n    this.setState({ isLoaded });\n\n    if (isLoaded) {\n      this.fadeIn();\n    } else {\n      this.fadeOut();\n    }\n  };\n\n  handleLoaded = () => {\n    const { id } = this.props;\n\n    if (this.imgSet.has(id)) {\n      return;\n    }\n\n    this.imgSet.add(id);\n    this.setIsLoaded();\n  }\n\n  fadeIn = () => {\n    if (this.sky.current) {\n      this.sky.current.emit(EVENTS.FADE_IN);\n    }\n  }\n\n  fadeOut = () => {\n    if (this.sky.current) {\n      this.sky.current.emit(EVENTS.FADE_OUT);\n    }\n  }\n\n  imgSet = new Set();\n  sky = React.createRef();\n\n  render() {\n    const { src, thumbnail } = this.props;\n    const { isLoaded } = this.state;\n\n    return (\n      <React.Fragment>\n        <Thumbnail src={thumbnail} isLoaded={isLoaded} />\n        <a-scene>\n          <a-sky src={src} opacity=\"0\" ref={this.sky}>\n            <a-animation\n              begin={EVENTS.FADE_IN}\n              dur={DURATION}\n              easing=\"ease-in\"\n              attribute=\"material.opacity\"\n              to=\"1\"\n            />\n            <a-animation\n              begin={EVENTS.FADE_OUT}\n              dur={DURATION}\n              easing=\"ease-out\"\n              attribute=\"material.opacity\"\n              to=\"0\"\n            />\n          </a-sky>\n        </a-scene>\n      </React.Fragment>\n    );\n  }\n}\n\nPanoromasVR.propTypes = {\n  id: string,\n  src: string,\n  thumbnail: string,\n};\n\nexport default PanoromasVR;\n","const defaultDisplayName = 'Component';\n\nconst getDisplayName = (WrappedComponent) => {\n  const { displayName, name } = WrappedComponent;\n\n  return displayName || name || defaultDisplayName;\n};\n\nexport default getDisplayName;\n","const compose = (...enhancers) => {\n  if (enhancers.length === 0) {\n    return args => args;\n  }\n\n  if (enhancers.length === 1) {\n    return enhancers[0];\n  }\n\n  return enhancers.reduce((a, b) => (...args) => a(b(...args)));\n};\n\nexport default compose;\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport getDisplayName from '@/utils/getDisplayName';\n\nconst withFadeIn = Placeholder => (Component) => {\n  class WithFadeIn extends React.Component {\n    state = {\n      isLoaded: false,\n    };\n\n    componentDidMount() {\n      if (this.props.src) {\n        this.loadImage();\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.src !== prevProps.src) {\n        this.loadImage();\n      }\n    }\n\n    loadImage = () => {\n      const { src } = this.props;\n      const img = new Image();\n\n      img.src = src;\n\n      if (img.complete) {\n        this.handleLoaded();\n      } else {\n        this.setState({ isLoaded: false });\n        img.onload = this.handleLoaded;\n      }\n    }\n\n    handleLoaded = () => {\n      this.setState({ isLoaded: true });\n    }\n\n    render() {\n      const { isLoaded } = this.state;\n\n      return isLoaded ? <Component {...this.props} /> : <Placeholder {...this.props} />;\n    }\n  }\n\n  WithFadeIn.propTypes = {\n    src: string,\n  };\n\n  WithFadeIn.displayName = `WithFadeIn(${getDisplayName(Component)})`;\n\n  return WithFadeIn;\n};\n\nexport default withFadeIn;\n"],"sourceRoot":""}